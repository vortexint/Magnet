#include "EfxPresetList.hpp"

#include <AL/efx-presets.h>

namespace Magnet {

EFXEAXREVERBPROPERTIES EFX_PRESET_LIST[] = {
EFX_REVERB_PRESET_GENERIC,
EFX_REVERB_PRESET_PADDEDCELL,
EFX_REVERB_PRESET_ROOM,
EFX_REVERB_PRESET_BATHROOM,
EFX_REVERB_PRESET_LIVINGROOM,
EFX_REVERB_PRESET_STONEROOM,
EFX_REVERB_PRESET_AUDITORIUM,
EFX_REVERB_PRESET_CONCERTHALL,
EFX_REVERB_PRESET_CAVE,
EFX_REVERB_PRESET_ARENA,
EFX_REVERB_PRESET_HANGAR,
EFX_REVERB_PRESET_CARPETEDHALLWAY,
EFX_REVERB_PRESET_HALLWAY,
EFX_REVERB_PRESET_STONECORRIDOR,
EFX_REVERB_PRESET_ALLEY,
EFX_REVERB_PRESET_FOREST,
EFX_REVERB_PRESET_CITY,
EFX_REVERB_PRESET_MOUNTAINS,
EFX_REVERB_PRESET_QUARRY,
EFX_REVERB_PRESET_PLAIN,
EFX_REVERB_PRESET_PARKINGLOT,
EFX_REVERB_PRESET_SEWERPIPE,
EFX_REVERB_PRESET_UNDERWATER,
EFX_REVERB_PRESET_DRUGGED,
EFX_REVERB_PRESET_DIZZY,
EFX_REVERB_PRESET_PSYCHOTIC,
EFX_REVERB_PRESET_CASTLE_SMALLROOM,
EFX_REVERB_PRESET_CASTLE_SHORTPASSAGE,
EFX_REVERB_PRESET_CASTLE_MEDIUMROOM,
EFX_REVERB_PRESET_CASTLE_LARGEROOM,
EFX_REVERB_PRESET_CASTLE_LONGPASSAGE,
EFX_REVERB_PRESET_CASTLE_HALL,
EFX_REVERB_PRESET_CASTLE_CUPBOARD,
EFX_REVERB_PRESET_CASTLE_COURTYARD,
EFX_REVERB_PRESET_CASTLE_ALCOVE,
EFX_REVERB_PRESET_FACTORY_SMALLROOM,
EFX_REVERB_PRESET_FACTORY_SHORTPASSAGE,
EFX_REVERB_PRESET_FACTORY_MEDIUMROOM,
EFX_REVERB_PRESET_FACTORY_LARGEROOM,
EFX_REVERB_PRESET_FACTORY_LONGPASSAGE,
EFX_REVERB_PRESET_FACTORY_HALL,
EFX_REVERB_PRESET_FACTORY_CUPBOARD,
EFX_REVERB_PRESET_FACTORY_COURTYARD,
EFX_REVERB_PRESET_FACTORY_ALCOVE,
EFX_REVERB_PRESET_ICEPALACE_SMALLROOM,
EFX_REVERB_PRESET_ICEPALACE_SHORTPASSAGE,
EFX_REVERB_PRESET_ICEPALACE_MEDIUMROOM,
EFX_REVERB_PRESET_ICEPALACE_LARGEROOM,
EFX_REVERB_PRESET_ICEPALACE_LONGPASSAGE,
EFX_REVERB_PRESET_ICEPALACE_HALL,
EFX_REVERB_PRESET_ICEPALACE_CUPBOARD,
EFX_REVERB_PRESET_ICEPALACE_COURTYARD,
EFX_REVERB_PRESET_ICEPALACE_ALCOVE,
EFX_REVERB_PRESET_SPACESTATION_SMALLROOM,
EFX_REVERB_PRESET_SPACESTATION_SHORTPASSAGE,
EFX_REVERB_PRESET_SPACESTATION_MEDIUMROOM,
EFX_REVERB_PRESET_SPACESTATION_LARGEROOM,
EFX_REVERB_PRESET_SPACESTATION_LONGPASSAGE,
EFX_REVERB_PRESET_SPACESTATION_HALL,
EFX_REVERB_PRESET_SPACESTATION_CUPBOARD,
EFX_REVERB_PRESET_SPACESTATION_ALCOVE,
EFX_REVERB_PRESET_WOODEN_SMALLROOM,
EFX_REVERB_PRESET_WOODEN_SHORTPASSAGE,
EFX_REVERB_PRESET_WOODEN_MEDIUMROOM,
EFX_REVERB_PRESET_WOODEN_LARGEROOM,
EFX_REVERB_PRESET_WOODEN_LONGPASSAGE,
EFX_REVERB_PRESET_WOODEN_HALL,
EFX_REVERB_PRESET_WOODEN_CUPBOARD,
EFX_REVERB_PRESET_WOODEN_COURTYARD,
EFX_REVERB_PRESET_WOODEN_ALCOVE,
EFX_REVERB_PRESET_SPORT_EMPTYSTADIUM,
EFX_REVERB_PRESET_SPORT_SQUASHCOURT,
EFX_REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL,
EFX_REVERB_PRESET_SPORT_LARGESWIMMINGPOOL,
EFX_REVERB_PRESET_SPORT_GYMNASIUM,
EFX_REVERB_PRESET_SPORT_FULLSTADIUM,
EFX_REVERB_PRESET_SPORT_STADIUMTANNOY,
EFX_REVERB_PRESET_PREFAB_WORKSHOP,
EFX_REVERB_PRESET_PREFAB_SCHOOLROOM,
EFX_REVERB_PRESET_PREFAB_PRACTISEROOM,
EFX_REVERB_PRESET_PREFAB_OUTHOUSE,
EFX_REVERB_PRESET_PREFAB_CARAVAN,
EFX_REVERB_PRESET_DOME_TOMB,
EFX_REVERB_PRESET_PIPE_SMALL,
EFX_REVERB_PRESET_DOME_SAINTPAULS,
EFX_REVERB_PRESET_PIPE_LONGTHIN,
EFX_REVERB_PRESET_PIPE_LARGE,
EFX_REVERB_PRESET_PIPE_RESONANT,
EFX_REVERB_PRESET_OUTDOORS_BACKYARD,
EFX_REVERB_PRESET_OUTDOORS_ROLLINGPLAINS,
EFX_REVERB_PRESET_OUTDOORS_DEEPCANYON,
EFX_REVERB_PRESET_OUTDOORS_CREEK,
EFX_REVERB_PRESET_OUTDOORS_VALLEY,
EFX_REVERB_PRESET_MOOD_HEAVEN,
EFX_REVERB_PRESET_MOOD_HELL,
EFX_REVERB_PRESET_MOOD_MEMORY,
EFX_REVERB_PRESET_DRIVING_COMMENTATOR,
EFX_REVERB_PRESET_DRIVING_PITGARAGE,
EFX_REVERB_PRESET_DRIVING_INCAR_RACER,
EFX_REVERB_PRESET_DRIVING_INCAR_SPORTS,
EFX_REVERB_PRESET_DRIVING_INCAR_LUXURY,
EFX_REVERB_PRESET_DRIVING_FULLGRANDSTAND,
EFX_REVERB_PRESET_DRIVING_EMPTYGRANDSTAND,
EFX_REVERB_PRESET_DRIVING_TUNNEL,
EFX_REVERB_PRESET_CITY_STREETS,
EFX_REVERB_PRESET_CITY_SUBWAY,
EFX_REVERB_PRESET_CITY_MUSEUM,
EFX_REVERB_PRESET_CITY_LIBRARY,
EFX_REVERB_PRESET_CITY_UNDERPASS,
EFX_REVERB_PRESET_CITY_ABANDONED,
EFX_REVERB_PRESET_DUSTYROOM,
EFX_REVERB_PRESET_CHAPEL,
EFX_REVERB_PRESET_SMALLWATERROOM
};

const char* EFX_PRESET_NAMES[] = {
"EFX_REVERB_PRESET_GENERIC",
"EFX_REVERB_PRESET_PADDEDCELL",
"EFX_REVERB_PRESET_ROOM",
"EFX_REVERB_PRESET_BATHROOM",
"EFX_REVERB_PRESET_LIVINGROOM",
"EFX_REVERB_PRESET_STONEROOM",
"EFX_REVERB_PRESET_AUDITORIUM",
"EFX_REVERB_PRESET_CONCERTHALL",
"EFX_REVERB_PRESET_CAVE",
"EFX_REVERB_PRESET_ARENA",
"EFX_REVERB_PRESET_HANGAR",
"EFX_REVERB_PRESET_CARPETEDHALLWAY",
"EFX_REVERB_PRESET_HALLWAY",
"EFX_REVERB_PRESET_STONECORRIDOR",
"EFX_REVERB_PRESET_ALLEY",
"EFX_REVERB_PRESET_FOREST",
"EFX_REVERB_PRESET_CITY",
"EFX_REVERB_PRESET_MOUNTAINS",
"EFX_REVERB_PRESET_QUARRY",
"EFX_REVERB_PRESET_PLAIN",
"EFX_REVERB_PRESET_PARKINGLOT",
"EFX_REVERB_PRESET_SEWERPIPE",
"EFX_REVERB_PRESET_UNDERWATER",
"EFX_REVERB_PRESET_DRUGGED",
"EFX_REVERB_PRESET_DIZZY",
"EFX_REVERB_PRESET_PSYCHOTIC",
"EFX_REVERB_PRESET_CASTLE_SMALLROOM",
"EFX_REVERB_PRESET_CASTLE_SHORTPASSAGE",
"EFX_REVERB_PRESET_CASTLE_MEDIUMROOM",
"EFX_REVERB_PRESET_CASTLE_LARGEROOM",
"EFX_REVERB_PRESET_CASTLE_LONGPASSAGE",
"EFX_REVERB_PRESET_CASTLE_HALL",
"EFX_REVERB_PRESET_CASTLE_CUPBOARD",
"EFX_REVERB_PRESET_CASTLE_COURTYARD",
"EFX_REVERB_PRESET_CASTLE_ALCOVE",
"EFX_REVERB_PRESET_FACTORY_SMALLROOM",
"EFX_REVERB_PRESET_FACTORY_SHORTPASSAGE",
"EFX_REVERB_PRESET_FACTORY_MEDIUMROOM",
"EFX_REVERB_PRESET_FACTORY_LARGEROOM",
"EFX_REVERB_PRESET_FACTORY_LONGPASSAGE",
"EFX_REVERB_PRESET_FACTORY_HALL",
"EFX_REVERB_PRESET_FACTORY_CUPBOARD",
"EFX_REVERB_PRESET_FACTORY_COURTYARD",
"EFX_REVERB_PRESET_FACTORY_ALCOVE",
"EFX_REVERB_PRESET_ICEPALACE_SMALLROOM",
"EFX_REVERB_PRESET_ICEPALACE_SHORTPASSAGE",
"EFX_REVERB_PRESET_ICEPALACE_MEDIUMROOM",
"EFX_REVERB_PRESET_ICEPALACE_LARGEROOM",
"EFX_REVERB_PRESET_ICEPALACE_LONGPASSAGE",
"EFX_REVERB_PRESET_ICEPALACE_HALL",
"EFX_REVERB_PRESET_ICEPALACE_CUPBOARD",
"EFX_REVERB_PRESET_ICEPALACE_COURTYARD",
"EFX_REVERB_PRESET_ICEPALACE_ALCOVE",
"EFX_REVERB_PRESET_SPACESTATION_SMALLROOM",
"EFX_REVERB_PRESET_SPACESTATION_SHORTPASSAGE",
"EFX_REVERB_PRESET_SPACESTATION_MEDIUMROOM",
"EFX_REVERB_PRESET_SPACESTATION_LARGEROOM",
"EFX_REVERB_PRESET_SPACESTATION_LONGPASSAGE",
"EFX_REVERB_PRESET_SPACESTATION_HALL",
"EFX_REVERB_PRESET_SPACESTATION_CUPBOARD",
"EFX_REVERB_PRESET_SPACESTATION_ALCOVE",
"EFX_REVERB_PRESET_WOODEN_SMALLROOM",
"EFX_REVERB_PRESET_WOODEN_SHORTPASSAGE",
"EFX_REVERB_PRESET_WOODEN_MEDIUMROOM",
"EFX_REVERB_PRESET_WOODEN_LARGEROOM",
"EFX_REVERB_PRESET_WOODEN_LONGPASSAGE",
"EFX_REVERB_PRESET_WOODEN_HALL",
"EFX_REVERB_PRESET_WOODEN_CUPBOARD",
"EFX_REVERB_PRESET_WOODEN_COURTYARD",
"EFX_REVERB_PRESET_WOODEN_ALCOVE",
"EFX_REVERB_PRESET_SPORT_EMPTYSTADIUM",
"EFX_REVERB_PRESET_SPORT_SQUASHCOURT",
"EFX_REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL",
"EFX_REVERB_PRESET_SPORT_LARGESWIMMINGPOOL",
"EFX_REVERB_PRESET_SPORT_GYMNASIUM",
"EFX_REVERB_PRESET_SPORT_FULLSTADIUM",
"EFX_REVERB_PRESET_SPORT_STADIUMTANNOY",
"EFX_REVERB_PRESET_PREFAB_WORKSHOP",
"EFX_REVERB_PRESET_PREFAB_SCHOOLROOM",
"EFX_REVERB_PRESET_PREFAB_PRACTISEROOM",
"EFX_REVERB_PRESET_PREFAB_OUTHOUSE",
"EFX_REVERB_PRESET_PREFAB_CARAVAN",
"EFX_REVERB_PRESET_DOME_TOMB",
"EFX_REVERB_PRESET_PIPE_SMALL",
"EFX_REVERB_PRESET_DOME_SAINTPAULS",
"EFX_REVERB_PRESET_PIPE_LONGTHIN",
"EFX_REVERB_PRESET_PIPE_LARGE",
"EFX_REVERB_PRESET_PIPE_RESONANT",
"EFX_REVERB_PRESET_OUTDOORS_BACKYARD",
"EFX_REVERB_PRESET_OUTDOORS_ROLLINGPLAINS",
"EFX_REVERB_PRESET_OUTDOORS_DEEPCANYON",
"EFX_REVERB_PRESET_OUTDOORS_CREEK",
"EFX_REVERB_PRESET_OUTDOORS_VALLEY",
"EFX_REVERB_PRESET_MOOD_HEAVEN",
"EFX_REVERB_PRESET_MOOD_HELL",
"EFX_REVERB_PRESET_MOOD_MEMORY",
"EFX_REVERB_PRESET_DRIVING_COMMENTATOR",
"EFX_REVERB_PRESET_DRIVING_PITGARAGE",
"EFX_REVERB_PRESET_DRIVING_INCAR_RACER",
"EFX_REVERB_PRESET_DRIVING_INCAR_SPORTS",
"EFX_REVERB_PRESET_DRIVING_INCAR_LUXURY",
"EFX_REVERB_PRESET_DRIVING_FULLGRANDSTAND",
"EFX_REVERB_PRESET_DRIVING_EMPTYGRANDSTAND",
"EFX_REVERB_PRESET_DRIVING_TUNNEL",
"EFX_REVERB_PRESET_CITY_STREETS",
"EFX_REVERB_PRESET_CITY_SUBWAY",
"EFX_REVERB_PRESET_CITY_MUSEUM",
"EFX_REVERB_PRESET_CITY_LIBRARY",
"EFX_REVERB_PRESET_CITY_UNDERPASS",
"EFX_REVERB_PRESET_CITY_ABANDONED",
"EFX_REVERB_PRESET_DUSTYROOM",
"EFX_REVERB_PRESET_CHAPEL",
"EFX_REVERB_PRESET_SMALLWATERROOM"
};

void ConvertReverbPresetDescriptionALPreset(const ReverbDescription& desc,
                                            EFXEAXREVERBPROPERTIES* a) {
  a->flDensity = desc.density;
  a->flDiffusion = desc.diffusion;
  a->flGain = desc.gain;
  a->flGainHF = desc.gainHF;
  a->flGainLF = desc.gainLF;
  a->flDecayTime = desc.decayTime;
  a->flDecayHFRatio = desc.decayHFRatio;
  a->flDecayLFRatio = desc.decayLFRatio;
  a->flReflectionsGain = desc.reflectionsGain;
  a->flReflectionsDelay = desc.reflectionsDelay;
  memcpy(a->flReflectionsPan, desc.reflectionsPan,  sizeof(desc.reflectionsPan));
  a->flLateReverbGain = desc.lateReverbGain;
  a->flLateReverbDelay = desc.lateReverbDelay;
  memcpy(a->flLateReverbPan, desc.lateReverbPan, sizeof(desc.lateReverbPan));
  a->flEchoTime = desc.echoTime;
  a->flEchoDepth = desc.echoDepth;
  a->flModulationTime = desc.modulationTime;
  a->flModulationDepth = desc.modulationDepth;
  a->flAirAbsorptionGainHF = desc.airAbsorptionGainHF;
  a->flHFReference = desc.hFReference;
  a->flLFReference = desc.lFReference;
  a->flRoomRolloffFactor = desc.roomRolloffFactor;
  a->iDecayHFLimit = desc.decayHFLimit;
}
ReverbDescription ConvertALPresetToReverbPresetDescription(const EFXEAXREVERBPROPERTIES* a) {
  ReverbDescription desc = {};
  desc.density = a->flDensity;
  desc.diffusion = a->flDiffusion;
  desc.gain = a->flGain;
  desc.gainHF = a->flGainHF;
  desc.gainLF = a->flGainLF;
  desc.decayTime = a->flDecayTime;
  desc.decayHFRatio = a->flDecayHFRatio;
  desc.decayLFRatio = a->flDecayLFRatio;
  desc.reflectionsGain = a->flReflectionsGain;
  desc.reflectionsDelay = a->flReflectionsDelay;
  memcpy(desc.reflectionsPan, a->flReflectionsPan, sizeof(desc.reflectionsPan));
  desc.lateReverbGain = a->flLateReverbGain;
  desc.lateReverbDelay = a->flLateReverbDelay;
  memcpy(desc.lateReverbPan, a->flLateReverbPan, sizeof(desc.lateReverbPan));
  desc.echoTime = a->flEchoTime;
  desc.echoDepth = a->flEchoDepth;
  desc.modulationTime = a->flModulationTime;
  desc.modulationDepth = a->flModulationDepth;
  desc.airAbsorptionGainHF = a->flAirAbsorptionGainHF;
  desc.hFReference = a->flHFReference;
  desc.lFReference = a->flLFReference;
  desc.roomRolloffFactor = a->flRoomRolloffFactor;
  desc.decayHFLimit = a->iDecayHFLimit;

  return desc;
}
static_assert(
  sizeof(EFX_PRESET_LIST) / sizeof(EFX_PRESET_LIST[0]) ==
  sizeof(EFX_PRESET_NAMES) / sizeof(EFX_PRESET_NAMES[0]),
  "EFX_PRESET_LIST should be the same size as EFX_PRESET_NAMES"
);
std::unordered_map<std::string, ReverbDescription> fillPresetList() {
  std::unordered_map<std::string, ReverbDescription> presets;

  int PRESET_COUNT = sizeof(EFX_PRESET_LIST) / sizeof(EFX_PRESET_LIST[0]);
  for (size_t i = 0; i < PRESET_COUNT; ++i) {
    presets[EFX_PRESET_NAMES[i]] = ConvertALPresetToReverbPresetDescription(&EFX_PRESET_LIST[i]);
  }

  return presets;
};
const std::unordered_map<std::string, ReverbDescription>& getEFXPresets() {
  

  static std::unordered_map<std::string, ReverbDescription> presets = 
    fillPresetList();
  return presets;
}

} // namespace Magnet